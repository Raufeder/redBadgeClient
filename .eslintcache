[{"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\index.js":"1","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\reportWebVitals.js":"2","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\App.jsx":"3","C:\\Users\\draufeisen\\desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\index.js":"4","C:\\Users\\draufeisen\\desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\reportWebVitals.js":"5","C:\\Users\\draufeisen\\desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\App.jsx":"6","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\register.jsx":"7","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\login.jsx":"8","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\deleteAccount.jsx":"9","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\navbar.jsx":"10","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\logout.jsx":"11","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\homePage.jsx":"12","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\routeList.jsx":"13","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\userList.jsx":"14","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\addRoute.jsx":"15","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\helpers\\environment.jsx":"16","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\userCards.jsx":"17","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\routeCards.jsx":"18"},{"size":543,"mtime":1607588900392,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":2963,"mtime":1607679310588,"results":"22","hashOfConfig":"20"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":64,"mtime":1607351087768,"results":"26","hashOfConfig":"24"},{"size":4058,"mtime":1607689017479,"results":"27","hashOfConfig":"20"},{"size":2365,"mtime":1607688920014,"results":"28","hashOfConfig":"20"},{"size":2539,"mtime":1607688450559,"results":"29","hashOfConfig":"20"},{"size":2779,"mtime":1607661752988,"results":"30","hashOfConfig":"20"},{"size":463,"mtime":1607651834880,"results":"31","hashOfConfig":"32"},{"size":258,"mtime":1607687869881,"results":"33","hashOfConfig":"20"},{"size":1151,"mtime":1607691911117,"results":"34","hashOfConfig":"20"},{"size":1056,"mtime":1607692053011,"results":"35","hashOfConfig":"20"},{"size":3938,"mtime":1607694973442,"results":"36","hashOfConfig":"20"},{"size":281,"mtime":1607688258087,"results":"37","hashOfConfig":"20"},{"size":564,"mtime":1607692068098,"results":"38","hashOfConfig":"20"},{"size":655,"mtime":1607692394327,"results":"39","hashOfConfig":"20"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1hmhgh",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p6m2bx",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1jxjykj",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\index.js",[],["82","83"],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\reportWebVitals.js",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\App.jsx",[],"C:\\Users\\draufeisen\\desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\index.js",[],"C:\\Users\\draufeisen\\desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\reportWebVitals.js",[],"C:\\Users\\draufeisen\\desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\App.jsx",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\register.jsx",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\login.jsx",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\deleteAccount.jsx",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\navbar.jsx",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\auth\\logout.jsx",[],["84","85"],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\homePage.jsx",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\routeList.jsx",["86","87","88","89","90","91","92","93"],"import React, { useState, useEffect } from 'react';\r\nimport {Card, Button, CardImg, CardTitle, CardText, CardColumns, CardSubtitle, CardBody,} from 'reactstrap';\r\nimport RouteCards from './routeCards';\r\nimport APIURL from '../../helpers/environment';\r\n\r\nconst RouteComponent = (props) => {\r\n    const [routeList, setRouteList] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchRouteList()\r\n    }, []);\r\n\r\n    const fetchRouteList = () => {\r\n      fetch(`${APIURL}routes`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": props.token\r\n        },\r\n        body: JSON.stringify()\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setRouteList(data.routes);\r\n      }).catch(error => console.log(error));\r\n    }\r\n\r\n    function displayCards() {\r\n      return routeList.map((result, index) => <RouteCards key={index} character={result} />)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <CardColumns>\r\n                {displayCards()}\r\n            </CardColumns>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RouteComponent","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\userList.jsx",["94"],"import React, { useState, useEffect } from 'react';\r\nimport { CardColumns } from 'reactstrap';\r\nimport UserCards from './userCards';\r\nimport APIURL from \"../../helpers/environment\";\r\n\r\nconst UserListComponent = (props) => {\r\n    const [userList, setUserList] = useState([])\r\n    \r\n    useEffect(() => {\r\n      fetchUserList()\r\n    }, []);\r\n    \r\n    const fetchUserList = () => {\r\n      fetch(`${APIURL}admin/userlist`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": props.token\r\n        },\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setUserList(data.users);\r\n      }).catch(error => console.log(error));\r\n      console.log(userList);\r\n    }\r\n    function showCards() {\r\n      return userList.map((result, index) => <UserCards key={index} character={result} />)\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CardColumns>\r\n        {showCards()}\r\n      </CardColumns>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListComponent;","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\addRoute.jsx",["95","96","97","98","99","100"],"import React, { useState } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport '../../styles/addRoute.css'\r\nimport APIURL from \"../../helpers/environment\";\r\n\r\nconst CreateRouteComponent = (props) => {\r\n    const [addRoute, setAddRoute] = useState([])\r\n    const [routeName, setRouteName] = useState(\"\");\r\n    const [routeType, setRouteType] = useState(\"\");\r\n    const [grade, setGrade] = useState(\"\");\r\n    const [keywords, setKeywords] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    \r\n    // useEffect(() => {\r\n    //     fetchAddRouteList()\r\n    // }, []);\r\n\r\n    const fetchAddRouteList = (e) => {\r\n      e.preventDefault();\r\n        fetch(`${APIURL}admin/add/route`, {\r\n          method: 'POST',\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"Authorization\": props.token\r\n          },\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        setAddRoute(data);\r\n        console.log('Success', data)\r\n      }).catch(error => console.log(error));\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n    <Form>\r\n      <FormGroup>\r\n        <Label for=\"exampleRouteName\">Name of your Route</Label>\r\n        <Input type=\"text\" name=\"name\" id=\"exampleRouteName\" placeholder=\"Example Name\" onChange={(e) => setRouteName(e.target.value)}/>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"exampleSelect\">Type of Route</Label>\r\n        <Input type=\"select\" name=\"select\" id=\"Select Type\" onChange={(e) => setRouteType(e.target.value)}>\r\n          <option>bouldering</option>\r\n          <option>top rope</option>\r\n          <option>lead climbing</option>\r\n          <option>training</option>\r\n          <option>comp style boulder</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"exampleSelect\">Desired Grade</Label>\r\n        <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => setGrade(e.target.value)}>\r\n          <option>VB</option>\r\n          <option>V0</option>\r\n          <option>V1</option>\r\n          <option>V2</option>\r\n          <option>V3</option>\r\n          <option>V4</option>\r\n          <option>V5</option>\r\n          <option>V6</option>\r\n          <option>V7</option>\r\n          <option>V8</option>\r\n          <option>V9</option>\r\n          <option>V10+</option>\r\n          <option>5.6</option>\r\n          <option>5.7</option>\r\n          <option>5.8</option>\r\n          <option>5.9</option>\r\n          <option>5.10a</option>\r\n          <option>5.10b</option>\r\n          <option>5.10c</option>\r\n          <option>5.10d</option>\r\n          <option>5.11a</option>\r\n          <option>5.11b</option>\r\n          <option>5.11c</option>\r\n          <option>5.11d</option>\r\n          <option>5.12a</option>\r\n          <option>5.12b</option>\r\n          <option>5.12c</option>\r\n          <option>5.12d</option>\r\n          <option>5.13a</option>\r\n          <option>5.13b</option>\r\n          <option>5.13c</option>\r\n          <option>5.13d</option>\r\n          <option>5.14a</option>\r\n          <option>5.14b</option>\r\n          <option>5.14c</option>\r\n          <option>5.14d</option>\r\n          <option>5.15a</option>\r\n          <option>5.15b</option>\r\n          <option>5.15c</option>\r\n          <option>5.15d</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"exampleText\">Keywords for Route</Label>\r\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(e) => setKeywords(e.target.value)}/>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"exampleText\">Description of Route</Label>\r\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(e) => setDescription(e.target.value)}/>\r\n        {console.log(setDescription)}\r\n      </FormGroup>\r\n      <Button onChange={(e) => fetchAddRouteList(e.target.value)}>Submit</Button>\r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default CreateRouteComponent","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\helpers\\environment.jsx",["101"],"let APIURL = \"\";\r\n\r\nswitch (window.location.hostname) {\r\n    case 'localhost' || \"127.0.0.1\":\r\n        APIURL = \"http://localhost:8080/\";\r\n        break;\r\n    case \"dar-climbfinder.herokuapp.com\":\r\n        APIURL = \"https://climbfinder.herokuapp.com/\";\r\n}\r\n\r\nexport default APIURL;","C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\userCards.jsx",[],"C:\\Users\\draufeisen\\Desktop\\wd64-Sept2020\\projects\\redBadge\\redbadgeclient\\src\\components\\app\\routeCards.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":9,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"108","severity":1,"message":"112","line":2,"column":15,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"113","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":30},{"ruleId":"108","severity":1,"message":"114","line":2,"column":32,"nodeType":"110","messageId":"111","endLine":2,"endColumn":41},{"ruleId":"108","severity":1,"message":"115","line":2,"column":43,"nodeType":"110","messageId":"111","endLine":2,"endColumn":51},{"ruleId":"108","severity":1,"message":"116","line":2,"column":66,"nodeType":"110","messageId":"111","endLine":2,"endColumn":78},{"ruleId":"108","severity":1,"message":"117","line":2,"column":80,"nodeType":"110","messageId":"111","endLine":2,"endColumn":88},{"ruleId":"118","severity":1,"message":"119","line":11,"column":8,"nodeType":"120","endLine":11,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":11,"column":8,"nodeType":"120","endLine":11,"endColumn":10,"suggestions":"123"},{"ruleId":"108","severity":1,"message":"124","line":7,"column":12,"nodeType":"110","messageId":"111","endLine":7,"endColumn":20},{"ruleId":"108","severity":1,"message":"125","line":8,"column":12,"nodeType":"110","messageId":"111","endLine":8,"endColumn":21},{"ruleId":"108","severity":1,"message":"126","line":9,"column":12,"nodeType":"110","messageId":"111","endLine":9,"endColumn":21},{"ruleId":"108","severity":1,"message":"127","line":10,"column":12,"nodeType":"110","messageId":"111","endLine":10,"endColumn":17},{"ruleId":"108","severity":1,"message":"128","line":11,"column":12,"nodeType":"110","messageId":"111","endLine":11,"endColumn":20},{"ruleId":"108","severity":1,"message":"129","line":12,"column":12,"nodeType":"110","messageId":"111","endLine":12,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":3,"column":1,"nodeType":"132","messageId":"133","endLine":9,"endColumn":2},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'CardImg' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'CardSubtitle' is defined but never used.","'CardBody' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRouteList'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'fetchUserList'. Either include it or remove the dependency array.",["137"],"'addRoute' is assigned a value but never used.","'routeName' is assigned a value but never used.","'routeType' is assigned a value but never used.","'grade' is assigned a value but never used.","'keywords' is assigned a value but never used.","'description' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [fetchRouteList]",{"range":"142","text":"143"},"Update the dependencies array to be: [fetchUserList]",{"range":"144","text":"145"},[401,403],"[fetchRouteList]",[334,336],"[fetchUserList]"]